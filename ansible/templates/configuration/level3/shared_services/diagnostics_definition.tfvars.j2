
diagnostics_definition = {

  firewall = {
    name = "operational_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AzureFirewallApplicationRule", true, false, 7],
        ["AzureFirewallNetworkRule", true, false, 7],
        ["AzureFirewallDnsProxy", true, false, 7],
        ["AZFWApplicationRule", true, false, 7],
        ["AZFWApplicationRuleAggregation", true, false, 7],
        ["AZFWDnsQuery", true, false, 7],
        ["AZFWFatFlow", true, true, 7],
        ["AZFWFlowTrace", true, true, 7],
        ["AZFWFqdnResolveFailure", true, false, 7],
        ["AZFWIdpsSignature", true, false, 7],
        ["AZFWNatRule", true, false, 7],
        ["AZFWNatRuleAggregation", true, false, 7],
        ["AZFWNetworkRule", true, false, 7],
        ["AZFWNetworkRuleAggregation", true, false, 7],
        ["AZFWThreatIntel", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }

  }
  
  app_service = {
    name = "operational_logs_and_metrics"

    categories = {
      log = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AppServiceHTTPLogs", true, false, 0],
        ["AppServiceConsoleLogs", true, false, 0],
        ["AppServiceAppLogs", true, false, 0],
        ["AppServiceAuditLogs", true, false, 0],
        ["AppServiceIPSecAuditLogs", true, false, 0],
        ["AppServicePlatformLogs", true, false, 0],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 0],
      ]
    }
  }
  
  network_security_group = { # <- this is the definition_key
    name = "operational_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["NetworkSecurityGroupEvent", true, false, 14],
        ["NetworkSecurityGroupRuleCounter", true, false, 14],
      ]
    }
  }

  networking_all = { # <- this is the definition_key
    name = "operational_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["VMProtectionAlerts", true, false, 0],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 0],
      ]
    }

  }

  keyvault = { # <- this is the definition_key
    name = "keyvault_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AuditEvent", true, false, 14],
        ["AzurePolicyEvaluationDetails", true, false, 14],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
  
{% if ingress_egress_agw | trim == '1' or  ingress_egress_agw_intranet | trim == '1' %}
  application_gateway = {
    name = "application_gateway_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["ApplicationGatewayAccessLog", true, false, 14],
        ["ApplicationGatewayPerformanceLog", true, false, 14],   
        ["ApplicationGatewayFirewallLog", true, false, 14],                
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  } 
{% endif %}  

#  apim = {
#    name = "apim_logs_and_metrics"
#    categories = {
#      metric = [
#        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
#        ["AllMetrics", true, false, 7],
#      ]
#    }
#  }    

#  redis_cache = {
#    name = "redis_cache_logs_and_metrics"
#
#    categories = {
#      metric = [
#        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
#        ["AllMetrics", true, false, 7],
#      ]
#    }
#  }

{% if ingress_egress_firewall | trim == '1' or  ingress_egress_firewall_egress | trim == '1' or ingress_egress_firewall_intranet | trim == '1' or  ingress_egress_firewall_egress_intranet | trim == '1' %}
  azurerm_firewall = { # <- this is the definition_key
    name = "azurerm_firewall_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AzureFirewallApplicationRule", true, false, 7],
        ["AzureFirewallNetworkRule", true, false, 7],
        ["AzureFirewallDnsProxy", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
{% endif %}  

  public_ip_address = {
    name = "public_ip_address_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["DDoSProtectionNotifications", true, false, 7],
        ["DDoSMitigationFlowLogs", true, false, 7],
        ["DDoSMitigationReports", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }

{% if management_bastion | trim == '1' %}
  bastion_host = {
    name = "bastion_host_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["BastionAuditLogs", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }

  }
{% endif %}  

  default_all = {
    name = "operational_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AuditEvent", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }

  }

{% if internet_app_acr | trim == '1' %}

  azure_container_registry = {
    name = "acr_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["ContainerRegistryRepositoryEvents", true, false, 7],
        ["ContainerRegistryLoginEvents", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
  
{% endif %}  

{% if internet_app_aks | trim == '1' %}

  azure_container_registry = {
    name = "acr_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["ContainerRegistryRepositoryEvents", true, false, 7],
        ["ContainerRegistryLoginEvents", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
  

# Kubernetes Cluster Autoscaler
# Kubernetes Controller Manager
# Kubernetes Scheduler
# Kubernetes Audit
# guard
# Kubernetes API Server
# Kubernetes Audit Admin Logs
# Kubernetes Cloud Controller Manager
# csi-azuredisk-controller
# csi-azurefile-controller
# csi-snapshot-controller

  azure_kubernetes_cluster = {
    name = "aks_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["kube-apiserver", true, false, 7],
        ["kube-audit", true, false, 0],
        ["kube-audit-admin", true, false, 7],
        ["kube-controller-manager", true, false, 7],
        ["kube-scheduler", true, false, 0],
        ["cluster-autoscaler", true, false, 7],
        ["guard", true, false, 7],
        # Category 'kube-cloud-controller-manager' is not supported.
        # ["Kubernetes-cloud-controller-manager", true, false, 7],        
        ["csi-azuredisk-controller", true, false, 7],        
        ["csi-azurefile-controller", true, false, 7],        
        ["csi-snapshot-controller", true, false, 7],        
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
{% endif %}    

{% if internet_data_mssql | trim == '1' %}
  mssql_db = {
    name = "mssql_db_logs_and_metrics"

    categories = {
      log = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AutomaticTuning", true, false, 7],
        ["Blocks", true, false, 7],
        ["DatabaseWaitStatistics", true, false, 7],
        ["Deadlocks", true, false, 7],
        ["DevOpsOperationsAudit", true, false, 7],
        ["QueryStoreRuntimeStatistics", true, false, 7],
        ["QueryStoreWaitStatistics", true, false, 7],
        ["SQLInsights", true, false, 7],
        ["SQLSecurityAuditEvents", true, false, 7],
        ["Timeouts", true, false, 7],
        ["Errors", true, false, 7],

      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["Basic", true, false, 7],
        ["InstanceAndAppAdvanced", true, false, 7],
        ["WorkloadManagement", true, false, 7],
      ]
    }
  }
{% endif %} 

{% if internet_app_linux_function_app | trim == '1' %}
  functionapp = {
    name = "functionapp_logs_and_metrics"

    categories = {
      log = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["FunctionAppLogs", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
{% endif %} 


{% if internet_app_openai | trim == '1' %}
# OpenAI
# Audit Logs
# Request and Response Logs
# Trace Logs
# AllMetrics

  openai = {
    name = "openai_logs_and_metrics"

    categories = {
      log = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["Audit", true, false, 7],
        ["RequestResponse", true, false, 7],
        ["Trace", true, false, 7],                
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }
{% endif %} 

{% if internet_app_search_service | trim == '1' %}
  # Search Service
  # allLogs", "audit", "OperationLogs", "AllMetrics
  search_service = {
    name = "search_service_logs_and_metrics"

    categories = {
      log = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["allLogs", true, false, 7],
        ["audit", true, false, 7],
        ["OperationLogs", true, false, 7],           
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }
  }  
{% endif %} 

{% if internet_app_container_instance | trim == '1' %}
  # container group
  container_group = {
    name = "operational_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AuditEvent", true, false, 7],
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["AllMetrics", true, false, 7],
      ]
    }

  }
{% endif %}   

{% if internet_data_storage_account | trim == '1' %}
  storage_account = {
    name = "operational_logs_and_metrics"
    categories = {
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["Transaction", true, false, 0],
        ["Capacity", true, false, 0],
      ]
    }
  }  
  storage_blob = {
    name = "operational_logs_and_metrics"
    categories = {
      log = [
        # ["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["StorageRead", true, false, 14],
        ["StorageWrite", true, false, 14],
        ["StorageDelete", true, false, 14]
      ]
      metric = [
        #["Category name",  "Diagnostics Enabled(true/false)", "Retention Enabled(true/false)", Retention_period]
        ["Transaction", true, false, 0],
        ["Capacity", true, false, 0],
      ]
    }
  } 
{% endif %}   

}