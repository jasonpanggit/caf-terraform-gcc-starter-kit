{% if gcc_platform | trim == '1' %}
virtual_subnets = {

  # begin ingress zone
  AzureFirewallSubnet = {
    name    = "AzureFirewallSubnet" # Must be called AzureFirewallSubnet
    cidr    = ["{{cidr_ingress_egress_zone_subnet_ingress_internet}}"] # 64 ips
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]   
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{ingress_egress_vnet_name_ingress_internet}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_hub_internet_ingress_re1"              
{% endif %}
    }      
  } 
  ApplicationGatewaySubnet = {
    name    = "ingress-agw" 
    cidr    = ["{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}"]  # 64 ips
    nsg_key = "web_nsg"    
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]    
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{ingress_egress_vnet_name_ingress_internet}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_hub_internet_ingress_re1"              
{% endif %}
    }        
  }    
  # end ingress zone

  # begin egress zone
  AzureFirewallSubnet_egress = {
    name    = "AzureFirewallSubnet" # Must be called AzureFirewallSubnet
    cidr    = ["{{cidr_ingress_egress_zone_subnet_egress_internet}}"]   # 64 ips
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]    
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{ingress_egress_vnet_name_egress_internet}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_hub_internet_egress_re1"              
{% endif %}
    }      
  }  
  AzureFirewallMangementSubnet_egress = {
    name    = "AzureFirewallManagementSubnet" 
    cidr    = ["{{cidr_ingress_egress_zone_subnet_egress_mgmt_internet}}"]   # 64 ips
    service_endpoints = ["Microsoft.KeyVault", "Microsoft.Storage"]    
    vnet = {
{% if gcc_platform_import | trim == '0' %}
      id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{ingress_egress_vnet_name_egress_internet}}"
{% else %}
      lz_key = "shared_services"
      key = "vnet_hub_internet_egress_re1"              
{% endif %}
    }       
  }   
  # end egress zone  
}
{% else %}
#------------------------------------------------------
# this page is leave blank intentionally
#------------------------------------------------------
{% endif %}
