storage_accounts = {
  sa1 = {
    name                     = "staccsa1"
    resource_group_key       = "logic_app_rg_re1"
    account_tier             = "Standard"
    account_replication_type = "LRS"
  }
}

app_service_plans = {
  asp1 = {
    name               = "asp1"
    resource_group_key = "logic_app_rg_re1"
    kind               = "elastic"

    sku = {
      tier = "WorkflowStandard"
      size = "WS1"
    }
  }
}

logic_app_standard = {
  las1 = {
    name                 = "las1"
    resource_group_key   = "logic_app_rg_re1"
    app_service_plan_key = "asp1"
    storage_account_key  = "sa1"

    # Required for virtual network integration
    vnet_integration = {
{% if gcc_platform | trim == '1' %}


{% if gcc_platform_import | trim == '0' %}
      subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-logic-app-internet"
{% else %}
      # logic app standard is using "subnet_key"
      lz_key = "networking_spoke_internet"
      subnet_key = "logic_app_internet_subnet"
{% endif %} 
      

{% else %}
      vnet_key = "vnet_spoke_internet_re1"
      subnet_key = "logic_app_internet_subnet"
      lz_key = "networking_spoke_internet"    
      # subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-logic-app-internet"
{% endif %}      
    }

    # identity = {
    #   type = "SystemAssigned, UserAssigned"
    #   managed_identity_key = "logic_app_usermsi"
    # }

    app_settings = {
      "FUNCTIONS_WORKER_RUNTIME"     = "node",
      "WEBSITE_NODE_DEFAULT_VERSION" = "~14",
    }

    diagnostic_profiles = {
      central_logs_region = {
        definition_key   = "logic_app"
        destination_type = "log_analytics"
        destination_key  = "central_logs"
      }
    }  

    tags = { 
      purpose = "internet logic app" 
      project-code = "{{project_code}}" 
      env = "{{caf_environment}}" 
      zone = "{{zone_code}}"
      tier = "{{tier_code}}"        
    }  

    # Optional: inbound access - enabled private endpoint - private endpoint name - inbound subnet - private dns 
    private_endpoints = {
      # Require enforce_private_link_endpoint_network_policies set to true on the subnet
      pe1_logic_app = {
        name       = "pep-logic-app"

{% if gcc_platform | trim == '1' %}

{% if gcc_platform_import | trim == '0' %}
        subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-app-internet"
{% else %}
        # logic app standard is using "subnet_key"
        lz_key = "networking_spoke_internet"
        subnet_key = "app_internet_subnet"
{% endif %} 

{% else %}
        vnet_key = "vnet_spoke_internet_re1"
        subnet_key = "app_internet_subnet"
        lz_key = "networking_spoke_internet"    
        # subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-app-internet"
{% endif %}   
        resource_group_key = "logic_app_rg_re1"

        private_service_connection = {
          name                 = "psc-logic_app"
          is_manual_connection = false
          subresource_names    = ["sites"]
        }

        private_dns = {
          zone_group_name = "default"
          lz_key          = "networking_spoke_internet" # if DNS keys is deployed in remote landingzone
          keys = ["azurewebsites_dns_re1"]
        }
      }
    }

  }
}
